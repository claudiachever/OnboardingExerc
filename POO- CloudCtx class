from HealthInst import HealthInst
from datetime import *

class CloudCtx():

    def __init__(self):

        self.name = None
        self.tenant_name = None
        self.description = None
        self.ctx_profile_name = None
        self.name_alias = None
        self.health_inst_list = []
        #self.health_inst = HealthInst()


    def retrieve_data_from_resp(self, dictionary):
        common_part_attributes = dictionary["hcloudCtx"]["attributes"]
        self.name = common_part_attributes["name"]
        self.tenant_name = common_part_attributes["tenantName"]
        self.description = common_part_attributes["description"]
        self.ctx_profile_name = common_part_attributes["ctxProfileName"]
        self.name_alias = common_part_attributes["nameAlias"]
        self.last_modified = common_part_attributes["modTs"]
        #self.health_inst.retrieve_data_from_children(dictionary["hcloudCtx"]["children"][0])


    def retrieve_data_from_all_children(self, dictionary):
        common_part_children = dictionary["hcloudCtx"]["children"]
        for child in common_part_children:
            child_health_inst = HealthInst()
            child_health_inst.retrieve_data_from_children(child)
            self.health_inst_list.append(child_health_inst)


    def display_info(self):
        self.name= self.format_value(self.name)
        self.tenant_name = self.format_value(self.tenant_name)
        self.description = self.format_value(self.description)
        self.ctx_profile_name = self.format_value(self.ctx_profile_name)
        self.name_alias = self.format_value(self.name_alias)
        self.formatted_last_modified = self.format_date(self.last_modified)
        print ("Name is: {0} \n"
              "Tenant name is: {1} \n"
              "Description is: {2} \n"
              "CTX profile name is: {3} \n"
              "Name alias is: {4}\n"
              "formatted_last_modified:{5}".format(self.name, self.tenant_name, self.description, self.ctx_profile_name,
                                         self.name_alias, self.formatted_last_modified))
        if len(self.health_inst_list) == 0:
            print("Displayed health is : 0")
        else:
            for health_value in self.health_inst_list:
                print("Displayed health is: " + self.format_value(health_value.current_health))
        print()



    def format_value(self, value):
        if value == "" :
            return "-"
        else:
            return value


    def format_date(self, date):
        date_formatted = datetime.fromisoformat(date)
        return date_formatted.strftime("%d-%m-%Y %I:%M:%S %p")


    def get_health_child_list(self):
        return self.health_inst_list

   #####







